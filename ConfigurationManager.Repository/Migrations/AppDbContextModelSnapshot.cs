// <auto-generated />
using System;
using ConfigurationManager.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConfigurationManager.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ConfigurationManager.Core.Models.Draft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FileVersionId")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileVersionId")
                        .IsUnique();

                    b.HasIndex("SectionId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Drafts", (string)null);
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("InstanceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstanceId");

                    b.ToTable("Files", (string)null);
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.FileVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FileId")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("FileVersions");
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.Instance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SystemFileId")
                        .HasColumnType("int");

                    b.Property<int?>("SystemFileId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SystemFileId1");

                    b.ToTable("Instances", (string)null);
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.ParameterValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DraftId")
                        .HasColumnType("int");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DraftId");

                    b.ToTable("ParameterValues", (string)null);
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Defination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Types", (string)null);
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("InstanceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstanceId");

                    b.HasIndex("TypeId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.Draft", b =>
                {
                    b.HasOne("ConfigurationManager.Core.Models.FileVersion", "FileVersion")
                        .WithOne("Draft")
                        .HasForeignKey("ConfigurationManager.Core.Models.Draft", "FileVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConfigurationManager.Core.Models.Section", "Section")
                        .WithOne("Draft")
                        .HasForeignKey("ConfigurationManager.Core.Models.Draft", "SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConfigurationManager.Core.Models.User", "User")
                        .WithOne("Draft")
                        .HasForeignKey("ConfigurationManager.Core.Models.Draft", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileVersion");

                    b.Navigation("Section");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.File", b =>
                {
                    b.HasOne("ConfigurationManager.Core.Models.Instance", "Instance")
                        .WithMany("ConfigFiles")
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instance");
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.FileVersion", b =>
                {
                    b.HasOne("ConfigurationManager.Core.Models.File", "File")
                        .WithMany("Versions")
                        .HasForeignKey("FileId");

                    b.Navigation("File");
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.Instance", b =>
                {
                    b.HasOne("ConfigurationManager.Core.Models.File", "SystemFile")
                        .WithMany()
                        .HasForeignKey("SystemFileId1");

                    b.Navigation("SystemFile");
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.ParameterValue", b =>
                {
                    b.HasOne("ConfigurationManager.Core.Models.Draft", "Draft")
                        .WithMany("Values")
                        .HasForeignKey("DraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Draft");
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.User", b =>
                {
                    b.HasOne("ConfigurationManager.Core.Models.Instance", "Instance")
                        .WithMany("Users")
                        .HasForeignKey("InstanceId");

                    b.HasOne("ConfigurationManager.Core.Models.Type", "Type")
                        .WithMany("Users")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instance");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.Draft", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.File", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.FileVersion", b =>
                {
                    b.Navigation("Draft");
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.Instance", b =>
                {
                    b.Navigation("ConfigFiles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.Section", b =>
                {
                    b.Navigation("Draft");
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.Type", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ConfigurationManager.Core.Models.User", b =>
                {
                    b.Navigation("Draft");
                });
#pragma warning restore 612, 618
        }
    }
}
